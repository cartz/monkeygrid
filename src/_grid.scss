//  Grid

//  An dieser Stelle definieren wir den container.
//  Wir wollen nämlich nicht, dass die Internetseite 
//  sich über die gesamte Breite des Fensters erstreckt.
.container {
	width: $page-width;
	margin-left: auto;
	margin-right: auto;

	@media only screen and (min-width: $breakpoint-klein) {
		width: $page-width;
	}

	@media only screen and (min-width: $breakpoint-gross) {
		width: $page-width;
		max-width: $page-max-width;
	}
}

//  An dieser Stelle definieren wir eine Zeile (row).
.row {
	position: relative;
	width: 100%;
}

.row [class^="col"] {
	float: left;
	margin: 0.5rem 2%;
	min-height: 0.125rem;
}

.row::after {
	content: "";
	display: table;
	clear: both;
}

//  An dieser Stelle definieren wir eine Zelle (col).
//  In den Zellen befindet sich später unser Inhalt (Bilder, Texte,...)
//  Wenn wir etwas auf einem kleinen Bildschirm verstecken wollen, dann fügen 
//  wir die Angabe hidden-klein als class hinzu.
//  wenn wir eine Zelle auch auf kleinen Bildschirmen in einer bestimmten Größe 
//  haben wollen, dann fügen wir zum Beispiel col-viertel-klein als class hinzu.
//  Beispiel:
//    <div class="col-drittel col-vierte-klein"></div>
.col-viertel,
.col-drittel,
.col-halb,
.col-ganz {
	width: $grid-width;
}

@media only screen and (min-width: $breakpoint-mittel) {
	.col-viertel { width: ($grid-width / 4) - ($grid-gutter * 9 / 12); }
	.col-drittel { width: ($grid-width / 3) - ($grid-gutter * 8 / 12); }
	.col-halb { width: ($grid-width / 2) - ($grid-gutter * 6 / 12); }
	.col-ganz { width: $grid-width; }
}

.col-viertel-klein { width: ($grid-width / 4) - ($grid-gutter * 9 / 12); }
.col-drittel-klein { width: ($grid-width / 3) - ($grid-gutter * 8 / 12); }
.col-halb-klein { width: ($grid-width / 2) - ($grid-gutter * 6 / 12); }
.col-ganz-klein { width: $grid-width; }