//  Grid

//  An dieser Stelle definieren wir den container.
//  Wir wollen nämlich nicht, dass die Internetseite 
//  sich über die gesamte Breite des Fensters erstreckt.
.container {
	@include container();
}

//  An dieser Stelle definieren wir eine Zeile (row).
.row {
	@include spacer();
	position: relative;
	width: 100%;
}

.row [class^="col"] {
	float: left;
	margin: 0.5rem 2%;
	min-height: 0.125rem;
}

.row::after {
	content: "";
	display: table;
	clear: both;
}

//  An dieser Stelle definieren wir eine Zelle (col).
//  In den Zellen befindet sich später unser Inhalt (Bilder, Texte,...)
//  Wenn wir etwas auf einem kleinen Bildschirm verstecken wollen, dann fügen 
//  wir die Angabe hidden-klein als class hinzu.
//  wenn wir eine Zelle auch auf kleinen Bildschirmen in einer bestimmten Größe 
//  haben wollen, dann fügen wir zum Beispiel col-viertel-klein als class hinzu.
//  Beispiel:
//    <div class="col-drittel col-vierte-klein"></div>
.col-1-4, .col-2-4, .col-3-4,
.col-1-3, .col-2-3,
.col-1-2,
.col-1-1 {
	width: $grid-width;
}

@media only screen and (min-width: $breakpoint-klein) {
	.col-1-4 { width: ($grid-width / 4) - ($grid-gutter * 9 / 12); }
	.col-2-4 { width: (2 * ($grid-width / 4)) - ($grid-gutter * 9 / 12); }
	.col-3-4 { width: (3 * ($grid-width / 4)) - ($grid-gutter * 9 / 12); }
	.col-1-3 { width: ($grid-width / 3) - ($grid-gutter * 8 / 12); }
	.col-2-3 { width: (2 * ($grid-width / 3)) - ($grid-gutter * 8 / 12); }
	.col-1-2 { width: ($grid-width / 2) - ($grid-gutter * 6 / 12); }
	.col-1-1 { width: $grid-width; }
}

.col-1-4-klein { width: ($grid-width / 4) - ($grid-gutter * 9 / 12); }
.col-2-4-klein { width: (2 * ($grid-width / 4)) - ($grid-gutter * 9 / 12); }
.col-3-4-klein { width: (3 * ($grid-width / 4)) - ($grid-gutter * 9 / 12); }
.col-1-3-klein { width: ($grid-width / 3) - ($grid-gutter * 8 / 12); }
.col-2-3-klein { width: (2 * ($grid-width / 3)) - ($grid-gutter * 8 / 12); }
.col-1-2-klein { width: ($grid-width / 2) - ($grid-gutter * 6 / 12); }
.col-1-1-klein { width: $grid-width; }